@page "/"
@using BlazorCalculator.Data
@inject ICalculatorService calculatorService
<h1>Calculator</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="number1">Number 1</label>
                <input type="text" class="form-control" id="number1" placeholder="Enter number 1" @bind="@number1" />
            </div>
            <div class="form-group">
                <label for="operator">Operator</label>
                <select class="form-control" id="operator" @bind="@op">
                    <option>Choose an operator</option>
                    <option value="+">Sum</option>
                    <option value="-">Subtract</option>
                    <option value="*">Multiply</option>
                    <option value="/">Divide</option>
                </select>
            </div>
            <div class="form-group">
                <label for="number2">Number 2</label>
                <input type="text" class="form-control" id="number2" placeholder="Enter number 2" @bind="@number2" />
            </div>
            <button type="button" class="btn btn-primary" @onclick="Calculate">Calculate</button>
            <hr />
            <div class="form-group">
                <label for="result">Result: </label>
                <span id="result">@result</span>
            </div>

            <div class="form-group">
                <span class="alert-danger">@errors</span>
            </div>
        </form>
    </div>
</div>

@code {
    string op;
    int number1 = 0;
    int number2 = 0;
    int result = 0;
    string errors = String.Empty;

    void Calculate()
    {
        result = 0;
        errors = String.Empty;

        if (!ValidateInput())
            return;

        try
        {

            switch (op)
            {
                case "+":
                    result = calculatorService.Add(number1, number2);
                    break;
                case "-":
                    result = calculatorService.Subtract(number1, number2);
                    break;
                case "*":
                    result = calculatorService.Multiply(number1, number2);
                    break;
                case "/":
                    result = calculatorService.Divide(number1, number2);
                    break;
            }
        }catch(Exception ex)
        {
            errors = ex.Message;
        }

    }

    bool ValidateInput()
    {

        if (string.IsNullOrEmpty(op))
        {
            errors = "You must select an operator.";
            return false;
        }


        return true;
    }

}